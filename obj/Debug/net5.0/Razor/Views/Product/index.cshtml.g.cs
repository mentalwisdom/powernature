#pragma checksum "/Users/mac/Desktop/naturepower/Views/Product/index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "869f4a08e40823dcfcd75b35d00636ad97806afc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_index), @"mvc.1.0.view", @"/Views/Product/index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/mac/Desktop/naturepower/Views/_ViewImports.cshtml"
using nature;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/mac/Desktop/naturepower/Views/_ViewImports.cshtml"
using nature.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"869f4a08e40823dcfcd75b35d00636ad97806afc", @"/Views/Product/index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bc1f54a396025cac51c4e4562ae65e801a2b3cbe", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<nav aria-label=""breadcrumb"">
    <ol class=""breadcrumb breadcrumb-arrow"">
        <li class=""breadcrumb-item active"" aria-current=""page"">product</li>
    </ol>
</nav>
<div id='app1' v-cloak>

    <v-app>
        <v-main>
             <v-btn
              ");
            WriteLiteral(@"@click='add_product'
             >
                 <v-icon>
                   mdi-plus
                 </v-icon>
                 
             </v-btn>
			<v-text-field
                    v-model=""search""
                    append-icon=""mdi-magnify""
                    label=""Search""
                    single-line
                    hide-details
                ></v-text-field>
             <v-data-table
			 :search = 'search'
             :headers ='headers'
             :items   ='products'
             :footer-props=""{ 'items-per-page-options': [25, 50,100] }""
             :items-per-page=""25""
              class='elevation-1'
             />
                  <template v-slot:item.actions='{item}'>
                        <v-btn 
                        class=""white--text""
                        color=""blue darken-1""
                        ");
            WriteLiteral(@"@click=""edit_product(item)""
                        >
                            <v-icon>
                            mdi-pencil
                            </v-icon>
                            
                        </v-btn>
                </template>
             </v-data-table>
        </v-main>
    </v-app>
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        var app;
            var component = {
                vuetify: new Vuetify(theme())
                ,
                el:'#app1'
                ,
                data:{
                   search :'',
                   products:[]
                   ,
                   headers:[
                      {text:'productId',value:'productId',align:'left',sortable:true},
                      {text:'name',value:'name',align:'left',sortable:true},
                      {text:'qty',value:'qty',align:'left',sortable:true},
                      {text:'price',value:'price',align:'left',sortable:true},
                      {text:'product group',value:'productGroup',align:'left',sortable:true},


                      {text:'actions',value:'actions',align:'left',sortable:true}

					]
                }//edata
                ,
                created(){
                  this.products = ");
#nullable restore
#line 75 "/Users/mac/Desktop/naturepower/Views/Product/index.cshtml"
                             Write(Html.Raw(Json.Serialize(@ViewBag.products)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                    console.log(this.products);
                }//ecreated
                ,
                methods:{
                    add_product(){
                        window.location= '/product/add';
                  
                        
                    }//ef
                    
                    ,
                    edit_product(item){
                        window.location = '/product/edit/'+item.productId;
                    }

                }//emethods
                ,
                computed:{

                }//ecomputed
            };
            app = new Vue(component);


    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
